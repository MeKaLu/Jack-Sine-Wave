project Build is
   for Create_Missing_Dirs use "True";

   type Ver_Option        is            ("debug",   "fast");
   type Target_Option     is            ("linux",   "linux-aarch64");
   Ver   : Ver_Option     := external   ("ver",     "debug");
   Targ  : Target_Option  := external   ("target",  "linux");

   for Languages use ("Ada");

   for Source_Dirs use ("src/");
   for Main use ("jack_simple");

   for Exec_Dir use "out/" & Ver & Targ;
   for Object_Dir use "out/obj/" & Ver & Targ;
   -- for Runtime ("Ada") use "foo";
   case Targ is
      when "linux"         => for Target use "x86_64-pc-linux-gnu";
      when "linux-aarch64" => for Target use "aarch64-linux-gnu";
   end case;

   package Compiler is
      case Ver is
         when "debug" => for Switches ("Ada") use (
            "-gnata", 
            "-g", 
            "-ffunction-sections",
            "-fdata-sections",
            "-gnat2022",
            "-Wl,--gc-sections"
         );
         when "fast" => for Switches ("Ada") use (
            "-O2",
            "-ffunction-sections",
            "-fdata-sections",
            "-gnat2022",
            "-Wl,--gc-sections"
         );
         when others => null;
      end case;
   end Compiler;

   package Linker is
      case Targ is
         when "linux" => for Default_Switches ("Ada") use (
                           "-ljack",
                           "-lm"
                         );
         when "linux-aarch64" => for Default_Switches ("Ada") use (
                           "-ljack",
                           "-lm"
                         );
      end case;
   end Linker;

end Build;
